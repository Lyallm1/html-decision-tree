!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.decisiontree=e():t.decisiontree=e()}(this,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./ts/index.ts")}({"./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/*! no static exports found */function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tree=void 0;var r=n(/*! ./tree */"./ts/tree.ts");e.Tree=r.Tree},"./ts/tree.ts":
/*!********************!*\
  !*** ./ts/tree.ts ***!
  \********************/
/*! no static exports found */function(t,e,n){"use strict";var r,i=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),o=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,o=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(e,"__esModule",{value:!0}),e.Leaf=e.Nary=e.Binary=e.Node=e.DepthFirst=e.Tree=void 0;var s=n(/*! ./util */"./ts/util.ts"),l=function(){function t(){this.jsonStr="",this.root=null,this.history=[]}return t.prototype.loadJson=function(t){var e=this;return new Promise((function(n,r){var i=new XMLHttpRequest;i.onreadystatechange=function(){4===i.readyState&&(200===i.status?this._loadJson(i.responseText,n,r):r(i.statusText))}.bind(e),i.onerror=function(){r(i.statusText)}.bind(e),i.open("GET",t,!0),i.send()}))},t.prototype._loadJson=function(t,e,n){try{this.jsonStr=t,this.fromJson(),e("JSON loaded")}catch(t){n("JSON Parser Error!")}},t.prototype.fromJson=function(){var t=this;this.root=h.fromJson(JSON.parse(this.jsonStr)),new u(this,(function(t){return t})).result.forEach((function(e){return e.tree=t}))},t.prototype.toHTML=function(t){void 0===t&&(t=null),this.rootElement=t,new u(this,(function(t){return t})).result.forEach((function(e){t.appendChild(e.toHtml()),e.hide()})),this.root.show()},t.prototype.summary=function(t){t.hide();var e=[[t.content,""]],n=0;for(t=t.parent;t;){n++;var r=this.history[this.history.length-n];e.unshift([t.content,t.labels.get(r)]),t=t.parent}this.printSummary(e)},t.prototype.printSummary=function(t){var e,n;this.summaryElement=document.createElement("div"),s.default.addClass(this.summaryElement,"NODE","SUMMARY"),this.rootElement.appendChild(this.summaryElement);var r=document.createElement("span");s.default.addClass(r,"TITLE"),r.setAttribute("tabindex","-1"),r.innerHTML="Summary",this.summaryElement.appendChild(r);try{for(var i=o(t),l=i.next();!l.done;l=i.next()){var u=a(l.value,2),d=u[0],c=u[1],h=document.createElement("div"),f=document.createElement("span");f.innerHTML=d,h.appendChild(f);var p=document.createElement("span");p.innerHTML=c,h.appendChild(p),this.summaryElement.appendChild(h)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}this.summaryElement.style.display="block"},t}();e.Tree=l;var u=function(){function t(t,e){this.func=e,this.result=[],this.visit(t.root)}return t.prototype.visit=function(t){var e=this;this.result.push(this.func(t)),t.children.forEach((function(t){return e.visit(t)}))},t}();e.DepthFirst=u;var d=0,c=0,h=function(){function t(t,e,n,r){var i,a;void 0===e&&(e=""),void 0===n&&(n=0),void 0===r&&(r=[]),this.content=t,this.title=e,this.value=n,this.labels=new Map,this.kind="",this.children=new Map,this.parent=null,this.variable="dt_variable_"+d++,this.radioButtons=[],this.nextName="Next",this.previousName="Back";try{for(var s=o(r),l=s.next();!l.done;l=s.next()){var u=l.value,c=u.text,h=u.value;this.labels.set(h,c)}}catch(t){i={error:t}}finally{try{l&&!l.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}}return t.parseChildren=function(e,n){var r,i;if(n&&n.length)try{for(var a=o(n),s=a.next();!s.done;s=a.next()){var l=s.value,u=t.fromJson(l);e.children.set(u.value,u),u.parent=e}}catch(t){r={error:t}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}},t.fromJson=function(e){var n=null;switch(e.type||"leaf"){case"leaf":n=new m(e.content,e.title,e.value,e.action);break;case"nary":n=new p(e.content,e.title,e.value,e.labels||[]),t.parseChildren(n,e.children);break;case"binary":n=new f(e.content,e.title,e.value),t.parseChildren(n,e.children);break;default:throw Error("Unknown node type.")}return n},t.prototype.toHtml=function(){return this.div=document.createElement("div"),s.default.addClass(this.div,"NODE",this.kind),this.titleElement=document.createElement("span"),s.default.addClass(this.titleElement,"TITLE"),this.titleElement.setAttribute("tabindex","-1"),this.titleElement.innerHTML=this.title,this.div.appendChild(this.titleElement),this.contentElement=document.createElement("span"),s.default.addClass(this.contentElement,"CONTENT"),this.contentElement.setAttribute("tabindex","-1"),this.contentElement.innerHTML=this.content,this.div.appendChild(this.contentElement),this.radios(),this.buttons(),this.div},t.prototype.radios=function(){var t,e;try{for(var n=o(this.labels),r=n.next();!r.done;r=n.next()){var i=a(r.value,2),l=i[0],u=i[1],d=document.createElement("div");s.default.addClass(d,"RADIOBUTTON");var h=document.createElement("input");s.default.addClass(h,"RADIO");var f="dt_id_"+c++,p="dt_id_"+c++;h.type="radio",h.id=f,h.name=this.variable,h.value=l.toString(),h.setAttribute("aria-labelledby",p),this.radioButtons.push(h);var m=document.createElement("label");s.default.addClass(m,"LABEL"),m.id=p,m.setAttribute("for",f),m.innerHTML=u,d.appendChild(h),d.appendChild(m),this.div.appendChild(d)}}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.buttons=function(){var t=this.buttonsElement=document.createElement("div");s.default.addClass(t,"BUTTONS"),this.div.appendChild(t),this.parent&&s.default.makeButton(this.previousName,this.firePrevious.bind(this),t,"PREVIOUS"),s.default.makeButton(this.nextName,this.fireNext.bind(this),t,"NEXT")},t.prototype.fireNext=function(){var t,e;try{for(var n=o(this.radioButtons),r=n.next();!r.done;r=n.next()){var i=r.value;if(i.checked){var a=i.value,s=parseInt(a,10);return this.tree.history.push(s),this.hide(),void this.children.get(s).show()}}}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.firePrevious=function(){this.parent&&(this.hide(),this.parent.show())},t.prototype.show=function(){this.div.style.display="block",this.contentElement.setAttribute("tabindex","0"),this.titleElement.setAttribute("aria-live","polite"),this.titleElement.setAttribute("tabindex","0")},t.prototype.hide=function(){this.div.style.display="none",this.contentElement.setAttribute("tabindex","-1"),this.titleElement.removeAttribute("aria-live"),this.titleElement.setAttribute("tabindex","-1")},t}();e.Node=h;var f=function(t){function e(e,n,r){void 0===r&&(r=0);var i=t.call(this,e,n,r,[{text:"Yes",value:1},{text:"No",value:0}])||this;return i.content=e,i.title=n,i.value=r,i.kind="binary",i}return i(e,t),e}(h);e.Binary=f;var p=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.kind="nary",e}return i(e,t),e}(h);e.Nary=p;var m=function(t){function e(e,n,r,i){void 0===i&&(i="");var o=t.call(this,e,n,r)||this;return o.action=i,o.kind="leaf",o.nextName="Restart",o}return i(e,t),e.prototype.buttons=function(){t.prototype.buttons.call(this),this.summaryButton=s.default.makeButton("Summary",this.fireSummary.bind(this),this.buttonsElement),this.action&&(this.actionButton=s.default.makeButton("Go",this.fireAction.bind(this),this.buttonsElement,"ACTION"),document.createElement("button"))},e.prototype.fireAction=function(){console.log("Firing!"),window.open(this.action,"_blank")},e.prototype.fireSummary=function(){this.tree.summary(this)},e.prototype.fireNext=function(){this.hide(),this.tree.root.show(),this.tree.history=[]},e}(h);e.Leaf=m},"./ts/util.ts":
/*!********************!*\
  !*** ./ts/util.ts ***!
  \********************/
/*! no static exports found */function(t,e,n){"use strict";var r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.makeButton=function(e,n,r,i){void 0===i&&(i="");var o=document.createElement("button");return o.innerHTML=e,t.addClass(o,i||e.toUpperCase()),o.addEventListener("click",n),r.appendChild(o),o};t.addClass=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];e.forEach((function(e){return t.classList.add("DT_"+e.toUpperCase())}))}}(r||(r={})),e.default=r}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZWNpc2lvbnRyZWUvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL2RlY2lzaW9udHJlZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9kZWNpc2lvbnRyZWUvLi90cy9pbmRleC50cyIsIndlYnBhY2s6Ly9kZWNpc2lvbnRyZWUvLi90cy90cmVlLnRzIiwid2VicGFjazovL2RlY2lzaW9udHJlZS8uL3RzL3V0aWwudHMiXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwidGhpcyIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJUcmVlIiwianNvblN0ciIsImhpc3RvcnkiLCJsb2FkSnNvbiIsInVybCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiaHR0cFJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJfbG9hZEpzb24iLCJyZXNwb25zZVRleHQiLCJzdGF0dXNUZXh0Iiwib25lcnJvciIsIm9wZW4iLCJzZW5kIiwianNvbiIsImZyb21Kc29uIiwiZXJyIiwiTm9kZSIsIkpTT04iLCJwYXJzZSIsIkRlcHRoRmlyc3QiLCJ4IiwicmVzdWx0IiwiZm9yRWFjaCIsInRyZWUiLCJ0b0hUTUwiLCJub2RlIiwicm9vdEVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsInRvSHRtbCIsImhpZGUiLCJzaG93Iiwic3VtbWFyeSIsImNvbnRlbnQiLCJjb3VudCIsInBhcmVudCIsImxlbmd0aCIsInVuc2hpZnQiLCJsYWJlbHMiLCJwcmludFN1bW1hcnkiLCJzdW1tYXJ5RWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImFkZENsYXNzIiwidGl0bGUiLCJzZXRBdHRyaWJ1dGUiLCJpbm5lckhUTUwiLCJxdWVzdGlvbiIsImRpdiIsInNwYW4xIiwic3BhbjIiLCJzdHlsZSIsImRpc3BsYXkiLCJmdW5jIiwidmlzaXQiLCJwdXNoIiwiY2hpbGRyZW4iLCJjb3VudGVyIiwibGFiZWxDb3VudGVyIiwiTWFwIiwia2luZCIsInZhcmlhYmxlIiwicmFkaW9CdXR0b25zIiwibmV4dE5hbWUiLCJwcmV2aW91c05hbWUiLCJ0ZXh0Iiwic2V0IiwicGFyc2VDaGlsZHJlbiIsImNoaWxkIiwiY2hpbGROb2RlIiwidHlwZSIsIkxlYWYiLCJhY3Rpb24iLCJOYXJ5IiwiQmluYXJ5IiwiRXJyb3IiLCJ0aXRsZUVsZW1lbnQiLCJjb250ZW50RWxlbWVudCIsInJhZGlvcyIsImJ1dHRvbnMiLCJyYWRpbyIsInJhZGlvSWQiLCJsYWJlbElkIiwiaWQiLCJ0b1N0cmluZyIsImxhYmVsIiwiYnV0dG9uc0VsZW1lbnQiLCJtYWtlQnV0dG9uIiwiZmlyZVByZXZpb3VzIiwiZmlyZU5leHQiLCJjaGVja2VkIiwibnVtIiwicGFyc2VJbnQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzdW1tYXJ5QnV0dG9uIiwiZmlyZVN1bW1hcnkiLCJhY3Rpb25CdXR0b24iLCJmaXJlQWN0aW9uIiwiY29uc29sZSIsImxvZyIsIndpbmRvdyIsIlV0aWwiLCJjbGFzc25hbWUiLCJidXR0b24iLCJ0b1VwcGVyQ2FzZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlbGVtZW50IiwicmVzdCIsImNsYXNzTGlzdCIsImFkZCJd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T0FDZnhFLEtBQUtpRSxLQUFLM0IsUUFBVSxJQUd4QixFQXRDQSxDQUEwQm9CLEdBQWIsRUFBQXNELFE7Ozs7MkRDdFNiLElBQVU4QixFLGlEQUFWLFNBQVVBLEdBRUssRUFBQWQsV0FBYSxTQUN4QnJILEVBQWNzRyxFQUFtQnJDLEVBQ2pDbUUsUUFBQSxJQUFBQSxNQUFBLElBQ0EsSUFBSUMsRUFBUzlELFNBQVNDLGNBQWMsVUFLcEMsT0FKQTZELEVBQU96RCxVQUFZNUUsRUFDbkIsRUFBQXlFLFNBQVM0RCxFQUFRRCxHQUFhcEksRUFBS3NJLGVBQ25DRCxFQUFPRSxpQkFBaUIsUUFBU2pDLEdBQ2pDckMsRUFBT1AsWUFBWTJFLEdBQ1pBLEdBS0ksRUFBQTVELFNBQVcsU0FBUytELEcsSUFBc0Isd0RBQ3JEQyxFQUFLcEYsU0FBUSxTQUFBRixHQUFLLE9BQUFxRixFQUFRRSxVQUFVQyxJQUh6QixNQUdzQ3hGLEVBQUVtRixtQkFoQnZELENBQVVILE1BQUksS0FxQmQsVUFBZUEiLCJmaWxlIjoiZGVjaXNpb250cmVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiZGVjaXNpb250cmVlXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcImRlY2lzaW9udHJlZVwiXSA9IGZhY3RvcnkoKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vdHMvaW5kZXgudHNcIik7XG4iLCJpbXBvcnQge1RyZWUgYXMgb2JqMH0gZnJvbSAnLi90cmVlJztcblxuZXhwb3J0IGxldCBUcmVlID0gb2JqMDtcbiIsIi8vIEluaXRpYWwgdHJlZVxuaW1wb3J0IFV0aWwgZnJvbSAnLi91dGlsJztcblxuXG5leHBvcnQgY2xhc3MgVHJlZSB7XG5cbiAgcHVibGljIGpzb25TdHI6IHN0cmluZyA9ICcnO1xuICBwdWJsaWMgcm9vdDogTm9kZSA9IG51bGw7XG4gIHB1YmxpYyBoaXN0b3J5OiBudW1iZXJbXSA9IFtdO1xuICBwdWJsaWMgcm9vdEVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgc3VtbWFyeUVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuXG4gIHB1YmxpYyBsb2FkSnNvbih1cmw6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgaHR0cFJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgIGh0dHBSZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoaHR0cFJlcXVlc3QucmVhZHlTdGF0ZSA9PT0gNCkge1xuICAgICAgICAgIGlmIChodHRwUmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgdGhpcy5fbG9hZEpzb24oaHR0cFJlcXVlc3QucmVzcG9uc2VUZXh0LCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWplY3QoaHR0cFJlcXVlc3Quc3RhdHVzVGV4dCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LmJpbmQodGhpcyk7XG4gICAgICBodHRwUmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlamVjdChodHRwUmVxdWVzdC5zdGF0dXNUZXh0KTtcbiAgICAgIH0uYmluZCh0aGlzKTtcbiAgICAgIGh0dHBSZXF1ZXN0Lm9wZW4oJ0dFVCcsIHVybCwgdHJ1ZSk7XG4gICAgICBodHRwUmVxdWVzdC5zZW5kKCk7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgX2xvYWRKc29uKGpzb246IHN0cmluZywgcmVzb2x2ZTogRnVuY3Rpb24sIHJlamVjdDogRnVuY3Rpb24pIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5qc29uU3RyID0ganNvbjtcbiAgICAgIHRoaXMuZnJvbUpzb24oKTtcbiAgICAgIHJlc29sdmUoJ0pTT04gbG9hZGVkJyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZWplY3QoJ0pTT04gUGFyc2VyIEVycm9yIScpO1xuICAgIH1cbiAgfVxuXG5cbiAgcHVibGljIGZyb21Kc29uKCkge1xuICAgIHRoaXMucm9vdCA9IE5vZGUuZnJvbUpzb24oSlNPTi5wYXJzZSh0aGlzLmpzb25TdHIpKTtcbiAgICBsZXQgZGZzID0gbmV3IERlcHRoRmlyc3QodGhpcywgKHg6IE5vZGUpID0+IHgpO1xuICAgIGRmcy5yZXN1bHQuZm9yRWFjaChuID0+IG4udHJlZSA9IHRoaXMpO1xuICB9XG5cblxuICBwdWJsaWMgdG9IVE1MKG5vZGU6IEhUTUxFbGVtZW50ID0gbnVsbCkge1xuICAgIHRoaXMucm9vdEVsZW1lbnQgPSBub2RlO1xuICAgIGxldCBkZnMgPSBuZXcgRGVwdGhGaXJzdCh0aGlzLCAoeDogTm9kZSkgPT4geCk7XG4gICAgZGZzLnJlc3VsdC5mb3JFYWNoKChuOiBOb2RlKSA9PiB7XG4gICAgICBub2RlLmFwcGVuZENoaWxkKG4udG9IdG1sKCkpO1xuICAgICAgbi5oaWRlKCk7XG4gICAgfSk7XG4gICAgdGhpcy5yb290LnNob3coKTtcbiAgfVxuXG4gIHB1YmxpYyBzdW1tYXJ5KG5vZGU6IE5vZGUpIHtcbiAgICBub2RlLmhpZGUoKTtcbiAgICBsZXQgcmVzdWx0OiBbc3RyaW5nLCBzdHJpbmddW10gPSBbW25vZGUuY29udGVudCwgJyddXTtcbiAgICBsZXQgY291bnQgPSAwO1xuICAgIG5vZGUgPSBub2RlLnBhcmVudDtcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgY291bnQrKztcbiAgICAgIGxldCB2YWx1ZSA9IHRoaXMuaGlzdG9yeVt0aGlzLmhpc3RvcnkubGVuZ3RoIC0gY291bnRdO1xuICAgICAgcmVzdWx0LnVuc2hpZnQoW25vZGUuY29udGVudCwgbm9kZS5sYWJlbHMuZ2V0KHZhbHVlKV0pO1xuICAgICAgbm9kZSA9IG5vZGUucGFyZW50O1xuICAgIH1cbiAgICB0aGlzLnByaW50U3VtbWFyeShyZXN1bHQpO1xuICB9XG5cbiAgcHJpdmF0ZSBwcmludFN1bW1hcnkoc3VtbWFyeTogW3N0cmluZywgc3RyaW5nXVtdKSB7XG4gICAgdGhpcy5zdW1tYXJ5RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIFV0aWwuYWRkQ2xhc3ModGhpcy5zdW1tYXJ5RWxlbWVudCwgJ05PREUnLCAnU1VNTUFSWScpO1xuICAgIHRoaXMucm9vdEVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5zdW1tYXJ5RWxlbWVudCk7XG4gICAgbGV0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIFV0aWwuYWRkQ2xhc3ModGl0bGUsICdUSVRMRScpO1xuICAgIHRpdGxlLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgICB0aXRsZS5pbm5lckhUTUwgPSAnU3VtbWFyeSc7XG4gICAgdGhpcy5zdW1tYXJ5RWxlbWVudC5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgZm9yIChsZXQgW3F1ZXN0aW9uLCByZXN1bHRdIG9mIHN1bW1hcnkpIHtcbiAgICAgIGxldCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGxldCBzcGFuMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgIHNwYW4xLmlubmVySFRNTCA9IHF1ZXN0aW9uO1xuICAgICAgZGl2LmFwcGVuZENoaWxkKHNwYW4xKTtcbiAgICAgIGxldCBzcGFuMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgIHNwYW4yLmlubmVySFRNTCA9IHJlc3VsdDtcbiAgICAgIGRpdi5hcHBlbmRDaGlsZChzcGFuMik7XG4gICAgICB0aGlzLnN1bW1hcnlFbGVtZW50LmFwcGVuZENoaWxkKGRpdik7XG4gICAgfVxuICAgIHRoaXMuc3VtbWFyeUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIH1cblxufVxuXG5cbmV4cG9ydCBjbGFzcyBEZXB0aEZpcnN0IHtcblxuICBwdWJsaWMgcmVzdWx0OiBhbnlbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHRyZWU6IFRyZWUsIHByaXZhdGUgZnVuYzogRnVuY3Rpb24pIHtcbiAgICB0aGlzLnZpc2l0KHRyZWUucm9vdCk7XG4gIH1cblxuICBwcml2YXRlIHZpc2l0KG5vZGU6IE5vZGUpIHtcbiAgICB0aGlzLnJlc3VsdC5wdXNoKHRoaXMuZnVuYyhub2RlKSk7XG4gICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKHggPT4gdGhpcy52aXNpdCh4KSk7XG4gIH1cblxufVxuXG5cbmxldCBjb3VudGVyID0gMDtcbmxldCBsYWJlbENvdW50ZXIgPSAwO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTm9kZSB7XG5cbiAgcHVibGljIHRyZWU6IFRyZWU7XG4gIHB1YmxpYyBsYWJlbHM6IE1hcDxudW1iZXIsIHN0cmluZz4gPSBuZXcgTWFwPG51bWJlciwgc3RyaW5nPigpO1xuICBwdWJsaWMga2luZDogc3RyaW5nID0gJyc7XG4gIHB1YmxpYyBjaGlsZHJlbjogTWFwPG51bWJlciwgTm9kZT4gPSBuZXcgTWFwPG51bWJlciwgTm9kZT4oKTtcbiAgcHVibGljIHBhcmVudDogTm9kZSA9IG51bGw7XG4gIHB1YmxpYyB2YXJpYWJsZTogc3RyaW5nID0gJ2R0X3ZhcmlhYmxlXycgKyBjb3VudGVyKys7XG4gIHB1YmxpYyByYWRpb0J1dHRvbnM6IEhUTUxFbGVtZW50W10gPSBbXTtcbiAgcHVibGljIGRpdjogSFRNTEVsZW1lbnQ7XG4gIHB1YmxpYyB0aXRsZUVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgY29udGVudEVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgYnV0dG9uc0VsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBcbiAgLy8gcHJpdmF0ZSBuZXh0QnV0dG9uOiBIVE1MRWxlbWVudDtcbiAgLy8gcHJpdmF0ZSBwcmV2aW91c0J1dHRvbjogSFRNTEVsZW1lbnQ7XG5cblxuICBwdWJsaWMgbmV4dE5hbWU6IHN0cmluZyA9ICdOZXh0JztcbiAgcHVibGljIHByZXZpb3VzTmFtZTogc3RyaW5nID0gJ0JhY2snO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZW50OiBzdHJpbmcsIHB1YmxpYyB0aXRsZTogc3RyaW5nID0gJycsXG4gICAgICAgICAgICAgIHB1YmxpYyB2YWx1ZSA9IDAsXG4gICAgICAgICAgICAgIGxhYmVsczoge3RleHQ6IHN0cmluZywgdmFsdWU6IG51bWJlcn1bXSA9IFtdKSB7XG4gICAgZm9yIChsZXQge3RleHQ6IHRleHQsIHZhbHVlOiB2YWx1ZX0gb2YgbGFiZWxzKSB7XG4gICAgICB0aGlzLmxhYmVscy5zZXQodmFsdWUsIHRleHQpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIHBhcnNlQ2hpbGRyZW4obm9kZTogTm9kZSwganNvbjogYW55W10pIHtcbiAgICBpZiAoIWpzb24gfHwgIWpzb24ubGVuZ3RoKSByZXR1cm47XG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBqc29uKSB7XG4gICAgICBsZXQgY2hpbGROb2RlID0gTm9kZS5mcm9tSnNvbihjaGlsZCk7XG4gICAgICBub2RlLmNoaWxkcmVuLnNldChjaGlsZE5vZGUudmFsdWUsIGNoaWxkTm9kZSk7XG4gICAgICBjaGlsZE5vZGUucGFyZW50ID0gbm9kZTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZnJvbUpzb24oanNvbjogYW55KTogTm9kZSB7XG4gICAgbGV0IGtpbmQgPSBqc29uLnR5cGUgfHwgJ2xlYWYnO1xuICAgIGxldCBub2RlOiBOb2RlID0gbnVsbDtcbiAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgIGNhc2UgJ2xlYWYnOlxuICAgICAgICBub2RlID0gbmV3IExlYWYoanNvbi5jb250ZW50LCBqc29uLnRpdGxlLCBqc29uLnZhbHVlLCBqc29uLmFjdGlvbik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbmFyeSc6XG4gICAgICAgIG5vZGUgPSBuZXcgTmFyeShqc29uLmNvbnRlbnQsIGpzb24udGl0bGUsIGpzb24udmFsdWUsIGpzb24ubGFiZWxzIHx8IFtdKTtcbiAgICAgICAgTm9kZS5wYXJzZUNoaWxkcmVuKG5vZGUsIGpzb24uY2hpbGRyZW4pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICAgIG5vZGUgPSBuZXcgQmluYXJ5KGpzb24uY29udGVudCwganNvbi50aXRsZSwganNvbi52YWx1ZSk7XG4gICAgICAgIE5vZGUucGFyc2VDaGlsZHJlbihub2RlLCBqc29uLmNoaWxkcmVuKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biBub2RlIHR5cGUuJyk7XG4gICAgfVxuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgcHVibGljIHRvSHRtbCgpOiBIVE1MRWxlbWVudCB7XG4gICAgdGhpcy5kaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBVdGlsLmFkZENsYXNzKHRoaXMuZGl2LCAnTk9ERScsIHRoaXMua2luZCk7XG4gICAgLy8gQWN0dWFsIHRpdGxlIGVsZW1lbnRcbiAgICB0aGlzLnRpdGxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICBVdGlsLmFkZENsYXNzKHRoaXMudGl0bGVFbGVtZW50LCAnVElUTEUnKTtcbiAgICB0aGlzLnRpdGxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgdGhpcy50aXRsZUVsZW1lbnQuaW5uZXJIVE1MID0gdGhpcy50aXRsZTtcbiAgICB0aGlzLmRpdi5hcHBlbmRDaGlsZCh0aGlzLnRpdGxlRWxlbWVudCk7XG4gICAgLy8gQWN0dWFsIGNvbnRlbnQgZWxlbWVudFxuICAgIHRoaXMuY29udGVudEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgVXRpbC5hZGRDbGFzcyh0aGlzLmNvbnRlbnRFbGVtZW50LCAnQ09OVEVOVCcpO1xuICAgIHRoaXMuY29udGVudEVsZW1lbnQuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpO1xuICAgIHRoaXMuY29udGVudEVsZW1lbnQuaW5uZXJIVE1MID0gdGhpcy5jb250ZW50O1xuICAgIHRoaXMuZGl2LmFwcGVuZENoaWxkKHRoaXMuY29udGVudEVsZW1lbnQpO1xuICAgIHRoaXMucmFkaW9zKCk7XG4gICAgdGhpcy5idXR0b25zKCk7XG4gICAgcmV0dXJuIHRoaXMuZGl2O1xuICB9XG5cblxuICBwcm90ZWN0ZWQgcmFkaW9zKCkge1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHRoaXMubGFiZWxzKSB7XG4gICAgICBsZXQgY29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgVXRpbC5hZGRDbGFzcyhjb250ZW50LCAnUkFESU9CVVRUT04nKTtcbiAgICAgIGxldCByYWRpbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICBVdGlsLmFkZENsYXNzKHJhZGlvLCAnUkFESU8nKTtcbiAgICAgIGxldCByYWRpb0lkID0gJ2R0X2lkXycgKyBsYWJlbENvdW50ZXIrKztcbiAgICAgIGxldCBsYWJlbElkID0gJ2R0X2lkXycgKyBsYWJlbENvdW50ZXIrKztcbiAgICAgIHJhZGlvLnR5cGUgPSAncmFkaW8nO1xuICAgICAgcmFkaW8uaWQgPSByYWRpb0lkO1xuICAgICAgcmFkaW8ubmFtZSA9IHRoaXMudmFyaWFibGU7XG4gICAgICByYWRpby52YWx1ZSA9IGtleS50b1N0cmluZygpO1xuICAgICAgcmFkaW8uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsbGVkYnknLCBsYWJlbElkKTtcbiAgICAgIHRoaXMucmFkaW9CdXR0b25zLnB1c2gocmFkaW8pO1xuICAgICAgbGV0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgIFV0aWwuYWRkQ2xhc3MobGFiZWwsICdMQUJFTCcpO1xuICAgICAgbGFiZWwuaWQgPSBsYWJlbElkO1xuICAgICAgbGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCByYWRpb0lkKTtcbiAgICAgIGxhYmVsLmlubmVySFRNTCA9IHZhbHVlO1xuICAgICAgY29udGVudC5hcHBlbmRDaGlsZChyYWRpbyk7XG4gICAgICBjb250ZW50LmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICAgIHRoaXMuZGl2LmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCBidXR0b25zKCkge1xuICAgIGxldCBidXR0b25zID0gdGhpcy5idXR0b25zRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIFV0aWwuYWRkQ2xhc3MoYnV0dG9ucywgJ0JVVFRPTlMnKTtcbiAgICB0aGlzLmRpdi5hcHBlbmRDaGlsZChidXR0b25zKTtcbiAgICBpZiAodGhpcy5wYXJlbnQpIHtcbiAgICAgIFV0aWwubWFrZUJ1dHRvbihcbiAgICAgICAgdGhpcy5wcmV2aW91c05hbWUsIHRoaXMuZmlyZVByZXZpb3VzLmJpbmQodGhpcyksIGJ1dHRvbnMsICdQUkVWSU9VUycpO1xuICAgIH1cbiAgICBVdGlsLm1ha2VCdXR0b24odGhpcy5uZXh0TmFtZSwgdGhpcy5maXJlTmV4dC5iaW5kKHRoaXMpLCBidXR0b25zLCAnTkVYVCcpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGZpcmVOZXh0KCkge1xuICAgIGZvciAobGV0IHJhZGlvIG9mIHRoaXMucmFkaW9CdXR0b25zKSB7XG4gICAgICBpZiAoKHJhZGlvIGFzIGFueSkuY2hlY2tlZCkge1xuICAgICAgICBsZXQgdmFsdWUgPSAocmFkaW8gYXMgYW55KS52YWx1ZTtcbiAgICAgICAgbGV0IG51bSA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgICAgIHRoaXMudHJlZS5oaXN0b3J5LnB1c2gobnVtKTtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZ2V0KG51bSkuc2hvdygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIGZpcmVQcmV2aW91cygpIHtcbiAgICBpZiAodGhpcy5wYXJlbnQpIHtcbiAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgdGhpcy5wYXJlbnQuc2hvdygpO1xuICAgIH1cbiAgfVxuXG5cbiAgLy8gVE9ETzogVGhpcyBpcyBwcm9iYWJseSBvdmVya2lsbC5cbiAgcHVibGljIHNob3coKSB7XG4gICAgdGhpcy5kaXYuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgdGhpcy5jb250ZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJzAnKTtcbiAgICB0aGlzLnRpdGxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGl2ZScsICdwb2xpdGUnKTtcbiAgICB0aGlzLnRpdGxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJzAnKTtcbiAgICAvLyB0aGlzLnRpdGxlRWxlbWVudC5mb2N1cygpO1xuICB9XG5cbiAgcHVibGljIGhpZGUoKSB7XG4gICAgdGhpcy5kaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB0aGlzLmNvbnRlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgICB0aGlzLnRpdGxlRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtbGl2ZScpO1xuICAgIHRoaXMudGl0bGVFbGVtZW50LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgfVxuXG59XG5cbmV4cG9ydCBjbGFzcyBCaW5hcnkgZXh0ZW5kcyBOb2RlIHtcblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBwdWJsaWMga2luZCA9ICdiaW5hcnknO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZW50OiBzdHJpbmcsIHB1YmxpYyB0aXRsZTogc3RyaW5nLCBwdWJsaWMgdmFsdWUgPSAwKSB7XG4gICAgc3VwZXIoY29udGVudCwgdGl0bGUsIHZhbHVlLFxuICAgICAgICAgIFt7dGV4dDogJ1llcycsIHZhbHVlOiAxfSwge3RleHQ6ICdObycsIHZhbHVlOiAwfV0pO1xuICB9XG5cbn1cblxuXG5leHBvcnQgY2xhc3MgTmFyeSBleHRlbmRzIE5vZGUge1xuICBwdWJsaWMga2luZCA9ICduYXJ5J1xuXG59XG5cblxuZXhwb3J0IGNsYXNzIExlYWYgZXh0ZW5kcyBOb2RlIHtcbiAgcHVibGljIGtpbmQgPSAnbGVhZic7XG4gIHB1YmxpYyBuZXh0TmFtZSA9ICdSZXN0YXJ0JztcbiAgcHVibGljIHN1bW1hcnlCdXR0b246IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgYWN0aW9uQnV0dG9uOiBIVE1MRWxlbWVudDtcblxuICBjb25zdHJ1Y3Rvcihjb250ZW50OiBzdHJpbmcsIHRpdGxlOiBzdHJpbmcsIHZhbHVlOiBudW1iZXIsXG4gICAgICAgICAgICAgIHB1YmxpYyBhY3Rpb246IHN0cmluZyA9ICcnKSB7XG4gICAgc3VwZXIoY29udGVudCwgdGl0bGUsIHZhbHVlKTtcbiAgfVxuXG5cbiAgcHJvdGVjdGVkIGJ1dHRvbnMoKSB7XG4gICAgc3VwZXIuYnV0dG9ucygpO1xuICAgIHRoaXMuc3VtbWFyeUJ1dHRvbiA9IFV0aWwubWFrZUJ1dHRvbihcbiAgICAgICdTdW1tYXJ5JywgdGhpcy5maXJlU3VtbWFyeS5iaW5kKHRoaXMpLCB0aGlzLmJ1dHRvbnNFbGVtZW50KTtcbiAgICBpZiAodGhpcy5hY3Rpb24pIHtcbiAgICAgIHRoaXMuYWN0aW9uQnV0dG9uID0gVXRpbC5tYWtlQnV0dG9uKFxuICAgICAgICAnR28nLCB0aGlzLmZpcmVBY3Rpb24uYmluZCh0aGlzKSwgdGhpcy5idXR0b25zRWxlbWVudCwgJ0FDVElPTicpO1xuICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIGZpcmVBY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coJ0ZpcmluZyEnKTtcbiAgICB3aW5kb3cub3Blbih0aGlzLmFjdGlvbiwgJ19ibGFuaycpO1xuICB9XG4gIFxuICBwcm90ZWN0ZWQgZmlyZVN1bW1hcnkoKSB7XG4gICAgdGhpcy50cmVlLnN1bW1hcnkodGhpcyk7XG4gIH1cbiAgXG4gIHByb3RlY3RlZCBmaXJlTmV4dCgpIHtcbiAgICB0aGlzLmhpZGUoKTtcbiAgICB0aGlzLnRyZWUucm9vdC5zaG93KCk7XG4gICAgdGhpcy50cmVlLmhpc3RvcnkgPSBbXTtcbiAgfVxuXG59XG4iLCJuYW1lc3BhY2UgVXRpbCB7XG5cbiAgZXhwb3J0IGNvbnN0IG1ha2VCdXR0b24gPSBmdW5jdGlvbihcbiAgICBuYW1lOiBzdHJpbmcsIGFjdGlvbjogKCkgPT4gYW55LCBwYXJlbnQ6IEhUTUxFbGVtZW50LFxuICAgIGNsYXNzbmFtZTogc3RyaW5nID0gJycpOiBIVE1MQnV0dG9uRWxlbWVudCB7XG4gICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGJ1dHRvbi5pbm5lckhUTUwgPSBuYW1lO1xuICAgIGFkZENsYXNzKGJ1dHRvbiwgY2xhc3NuYW1lIHx8IG5hbWUudG9VcHBlckNhc2UoKSk7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWN0aW9uKTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICByZXR1cm4gYnV0dG9uO1xuICB9O1xuXG4gIGxldCBwcmVmaXggPSAnRFRfJztcblxuICBleHBvcnQgY29uc3QgYWRkQ2xhc3MgPSBmdW5jdGlvbihlbGVtZW50OiBIVE1MRWxlbWVudCwgLi4ucmVzdDogc3RyaW5nW10pIHtcbiAgICByZXN0LmZvckVhY2goeCA9PiBlbGVtZW50LmNsYXNzTGlzdC5hZGQocHJlZml4ICsgeC50b1VwcGVyQ2FzZSgpKSk7XG4gIH07XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXRpbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=