!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.decisiontree=e():t.decisiontree=e()}(this,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./ts/index.ts")}({"./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/*! no static exports found */function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tree=void 0;var r=n(/*! ./tree */"./ts/tree.ts");e.Tree=r.Tree},"./ts/tree.ts":
/*!********************!*\
  !*** ./ts/tree.ts ***!
  \********************/
/*! no static exports found */function(t,e,n){"use strict";var r,i=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),o=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,o=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a},s=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(a(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0}),e.Card=e.Leaf=e.Nary=e.Binary=e.Node=e.DepthFirst=e.Tree=void 0;var u=n(/*! ./util */"./ts/util.ts"),l=function(){function t(){this.jsonStr="",this.root=null,this.history=[]}return t.prototype.loadJson=function(t){var e=this;return new Promise((function(n,r){var i=new XMLHttpRequest;i.onreadystatechange=function(){4===i.readyState&&(200===i.status?this._loadJson(i.responseText,n,r):r(i.statusText))}.bind(e),i.onerror=function(){r(i.statusText)}.bind(e),i.open("GET",t,!0),i.send()}))},t.prototype._loadJson=function(t,e,n){try{this.jsonStr=t,this.fromJson(),e("JSON loaded")}catch(t){n("JSON Parser Error!")}},t.prototype.fromJson=function(){var t=this;this.root=f.fromJson(JSON.parse(this.jsonStr)),new d(this,(function(t){return t})).result.forEach((function(e){return e.tree=t}))},t.prototype.toHTML=function(t){void 0===t&&(t=null),this.rootElement=t,new d(this,(function(t){return t})).result.forEach((function(e){t.appendChild(e.toHtml()),e.hide()})),this.root.show()},t.prototype.summary=function(t){t.hide();var e=[[t.content,""]],n=0;for(t=t.parent;t;){n++;var r=this.history[this.history.length-n];e.unshift([t.content,t.labels.get(r)]),t=t.parent}this.printSummary(e)},t.prototype.printSummary=function(t){var e,n;this.summaryElement=document.createElement("div"),u.default.addClass(this.summaryElement,"NODE","SUMMARY"),this.rootElement.appendChild(this.summaryElement);var r=document.createElement("span");u.default.addClass(r,"TITLE"),r.setAttribute("tabindex","-1"),r.innerHTML="Summary",this.summaryElement.appendChild(r);try{for(var i=o(t),s=i.next();!s.done;s=i.next()){var l=a(s.value,2),d=l[0],c=l[1],h=document.createElement("div"),f=document.createElement("span");f.innerHTML=d,h.appendChild(f);var p=document.createElement("span");p.innerHTML=c,h.appendChild(p),this.summaryElement.appendChild(h)}}catch(t){e={error:t}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}this.summaryElement.style.display="block"},t}();e.Tree=l;var d=function(){function t(t,e){this.func=e,this.result=[],this.visit(t.root)}return t.prototype.visit=function(t){var e=this;this.result.push(this.func(t)),t.children.forEach((function(t){return e.visit(t)}))},t}();e.DepthFirst=d;var c=0,h=0,f=function(){function t(t,e,n,r){var i,a;void 0===e&&(e=""),void 0===n&&(n=0),void 0===r&&(r=[]),this.content=t,this.title=e,this.value=n,this.labels=new Map,this.kind="",this.children=new Map,this.parent=null,this.variable="dt_variable_"+c++,this.radioButtons=[],this.nextName="Next",this.previousName="Back",this.card=new b;try{for(var s=o(r),u=s.next();!u.done;u=s.next()){var l=u.value,d=l.text,h=l.value;this.labels.set(h,d)}}catch(t){i={error:t}}finally{try{u&&!u.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}}return t.parseChildren=function(e,n){var r,i;if(n&&n.length)try{for(var a=o(n),s=a.next();!s.done;s=a.next()){var u=s.value,l=t.fromJson(u);e.children.set(l.value,l),l.parent=e}}catch(t){r={error:t}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}},t.fromJson=function(e){var n=null;switch(e.type||"leaf"){case"leaf":n=new v(e.content,e.title,e.value,e.action);break;case"nary":n=new y(e.content,e.title,e.value,e.labels||[]),t.parseChildren(n,e.children);break;case"binary":n=new p(e.content,e.title,e.value),t.parseChildren(n,e.children);break;default:throw Error("Unknown node type.")}return n},t.prototype.toHtml=function(){u.default.addClass(this.card.div,this.kind),this.card.title.innerHTML=this.title;var t=document.createElement("span");return u.default.addClass(t,"CONTENT"),t.innerHTML=this.content,this.card.content.appendChild(t),this.radios(),this.buttons(),this.card.div},t.prototype.radios=function(){var t,e;try{for(var n=o(this.labels),r=n.next();!r.done;r=n.next()){var i=a(r.value,2),s=i[0],l=i[1],d=document.createElement("div");u.default.addClass(d,"RADIOBUTTON");var c=document.createElement("input");u.default.addClass(c,"RADIO");var f="dt_id_"+h++,p="dt_id_"+h++;c.type="radio",c.id=f,c.name=this.variable,c.value=s.toString(),c.setAttribute("aria-labelledby",p),this.radioButtons.push(c);var y=document.createElement("label");u.default.addClass(y,"LABEL"),y.id=p,y.setAttribute("for",f),y.innerHTML=l,d.appendChild(c),d.appendChild(y),this.card.content.appendChild(d)}}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.buttons=function(){this.parent&&u.default.makeButton(this.previousName,this.firePrevious.bind(this),this.card.buttons,"PREVIOUS"),u.default.makeButton(this.nextName,this.fireNext.bind(this),this.card.buttons,"NEXT")},t.prototype.fireNext=function(){var t,e;try{for(var n=o(this.radioButtons),r=n.next();!r.done;r=n.next()){var i=r.value;if(i.checked){var a=i.value,s=parseInt(a,10);return this.tree.history.push(s),this.hide(),void this.children.get(s).show()}}}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.firePrevious=function(){this.parent&&(this.hide(),this.parent.show())},t.prototype.show=function(){this.card.show()},t.prototype.hide=function(){this.card.hide()},t}();e.Node=f;var p=function(t){function e(e,n,r){void 0===r&&(r=0);var i=t.call(this,e,n,r,[{text:"Yes",value:1},{text:"No",value:0}])||this;return i.content=e,i.title=n,i.value=r,i.kind="binary",i}return i(e,t),e}(f);e.Binary=p;var y=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.kind="nary",e}return i(e,t),e}(f);e.Nary=y;var v=function(t){function e(e,n,r,i){void 0===i&&(i="");var o=t.call(this,e,n,r)||this;return o.action=i,o.kind="leaf",o.nextName="Restart",o}return i(e,t),e.prototype.buttons=function(){t.prototype.buttons.call(this),this.summaryButton=u.default.makeButton("Summary",this.fireSummary.bind(this),this.card.buttons),this.action&&(this.actionButton=u.default.makeButton("Go",this.fireAction.bind(this),this.card.buttons,"ACTION"),document.createElement("button"))},e.prototype.fireAction=function(){console.log("Firing!"),window.open(this.action,"_blank")},e.prototype.fireSummary=function(){this.tree.summary(this)},e.prototype.fireNext=function(){this.hide(),this.tree.root.show(),this.tree.history=[]},e}(f);e.Leaf=v;var m=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=document.createElement("div");return u.default.addClass.apply(u.default,s([n],t)),n},b=function(){function t(){this.div=m("NODE"),this.title=m("TITLE"),this.content=m("CONTENT"),this.buttons=m("BUTTONS"),this.div.appendChild(this.title),this.title.setAttribute("tabindex","-1"),this.div.appendChild(this.content),this.content.setAttribute("tabindex","-1"),this.div.appendChild(this.buttons)}return t.prototype.show=function(){this.div.style.display="block",this.content.setAttribute("tabindex","0"),this.title.setAttribute("aria-live","polite"),this.title.setAttribute("tabindex","0")},t.prototype.hide=function(){this.div.style.display="none",this.content.setAttribute("tabindex","-1"),this.title.removeAttribute("aria-live"),this.title.setAttribute("tabindex","-1")},t}();e.Card=b},"./ts/util.ts":
/*!********************!*\
  !*** ./ts/util.ts ***!
  \********************/
/*! no static exports found */function(t,e,n){"use strict";var r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.makeButton=function(e,n,r,i){void 0===i&&(i="");var o=document.createElement("button");return o.innerHTML=e,t.addClass(o,i||e.toUpperCase()),o.addEventListener("click",n),r.appendChild(o),o};t.addClass=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];e.forEach((function(e){return t.classList.add("DT_"+e.toUpperCase())}))}}(r||(r={})),e.default=r}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,