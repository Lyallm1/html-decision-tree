!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.decisiontree=e():t.decisiontree=e()}(this,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s="./ts/index.ts")}({"./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/*! no static exports found */function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tree=void 0;var n=r(/*! ./tree */"./ts/tree.ts");e.Tree=n.Tree},"./ts/tree.ts":
/*!********************!*\
  !*** ./ts/tree.ts ***!
  \********************/
/*! no static exports found */function(t,e,r){"use strict";var n,i=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),o=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,i,o=r.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(t){i={error:t}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(e,"__esModule",{value:!0}),e.Card=e.Summary=e.Leaf=e.Nary=e.Binary=e.Node=e.DepthFirst=e.Tree=void 0;var s=r(/*! ./util */"./ts/util.ts"),u=function(){function t(){this.jsonStr="",this.root=null,this.history=[],this.summaryElement=new m}return t.prototype.loadJson=function(t){var e=this;return new Promise((function(r,n){var i=new XMLHttpRequest;i.onreadystatechange=function(){4===i.readyState&&(200===i.status?this._loadJson(i.responseText,r,n):n(i.statusText))}.bind(e),i.onerror=function(){n(i.statusText)}.bind(e),i.open("GET",t,!0),i.send()}))},t.prototype._loadJson=function(t,e,r){try{this.jsonStr=t,this.fromJson(),e("JSON loaded")}catch(t){r("JSON Parser Error!")}},t.prototype.fromJson=function(){var t=this;this.root=c.fromJson(JSON.parse(this.jsonStr)),new l(this,(function(t){return t})).result.forEach((function(e){return e.tree=t})),this.summaryElement.parent=this.root,this.summaryElement.tree=this},t.prototype.toHTML=function(t){void 0===t&&(t=null),this.rootElement=t,new l(this,(function(t){return t})).result.forEach((function(e){t.appendChild(e.toHtml()),e.hide()})),t.appendChild(this.summaryElement.toHtml()),this.summaryElement.hide(),this.root.show()},t.prototype.summary=function(t){t.hide(),this.summaryElement.parent=t,this.summaryElement.show()},t}();e.Tree=u;var l=function(){function t(t,e){this.func=e,this.result=[],this.visit(t.root)}return t.prototype.visit=function(t){var e=this;this.result.push(this.func(t)),t.children.forEach((function(t){return e.visit(t)}))},t}();e.DepthFirst=l;var h=0,d=0,c=function(){function t(t,e,r,n){var i,a;void 0===e&&(e=""),void 0===r&&(r=0),void 0===n&&(n=[]),this.content=t,this.title=e,this.value=r,this.kind="",this.labels=new Map,this.children=new Map,this.parent=null,this.variable="dt_variable_"+h++,this.radioButtons=[],this.nextName="Next",this.previousName="Back",this.card=new v;try{for(var s=o(n),u=s.next();!u.done;u=s.next()){var l=u.value,d=l.text,c=l.value;this.labels.set(c,d)}}catch(t){i={error:t}}finally{try{u&&!u.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}}return t.parseChildren=function(e,r){var n,i;if(r&&r.length)try{for(var a=o(r),s=a.next();!s.done;s=a.next()){var u=s.value,l=t.fromJson(u);e.children.set(l.value,l),l.parent=e}}catch(t){n={error:t}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(n)throw n.error}}},t.fromJson=function(e){var r=null;switch(e.type||"leaf"){case"leaf":r=new y(e.content,e.title,e.value,e.action);break;case"nary":r=new p(e.content,e.title,e.value,e.labels||[]),t.parseChildren(r,e.children);break;case"binary":r=new f(e.content,e.title,e.value),t.parseChildren(r,e.children);break;default:throw Error("Unknown node type.")}return r},t.prototype.toHtml=function(){s.default.addClass(this.card.div,this.kind),this.card.title.innerHTML=this.title;var t=document.createElement("span");return s.default.addClass(t,"CONTENT"),t.innerHTML=this.content,this.card.content.appendChild(t),this.radios(),this.buttons(),this.card.div},t.prototype.radios=function(){var t,e;try{for(var r=o(this.labels),n=r.next();!n.done;n=r.next()){var i=a(n.value,2),u=i[0],l=i[1],h=s.default.makeDiv("RADIOBUTTON"),c=document.createElement("input");s.default.addClass(c,"RADIO");var f="dt_id_"+d++,p="dt_id_"+d++;c.type="radio",c.id=f,c.name=this.variable,c.value=u.toString(),this.radioButtons.push(c);var y=document.createElement("label");s.default.addClass(y,"LABEL"),y.id=p,y.setAttribute("for",f),y.innerHTML=l,h.appendChild(c),h.appendChild(y),this.card.content.appendChild(h)}}catch(e){t={error:e}}finally{try{n&&!n.done&&(e=r.return)&&e.call(r)}finally{if(t)throw t.error}}},t.prototype.buttons=function(){this.parent&&s.default.makeButton(this.previousName,this.firePrevious.bind(this),this.card.buttons,"PREVIOUS"),s.default.makeButton(this.nextName,this.fireNext.bind(this),this.card.buttons,"NEXT")},t.prototype.fireNext=function(){var t,e;try{for(var r=o(this.radioButtons),n=r.next();!n.done;n=r.next()){var i=n.value;if(i.checked){var a=i.value,s=parseInt(a,10);return this.tree.history.push(s),this.hide(),void this.children.get(s).show()}}}catch(e){t={error:e}}finally{try{n&&!n.done&&(e=r.return)&&e.call(r)}finally{if(t)throw t.error}}},t.prototype.firePrevious=function(){this.parent&&(this.hide(),this.parent.show())},t.prototype.show=function(){this.card.show()},t.prototype.hide=function(){this.card.hide()},t}();e.Node=c;var f=function(t){function e(e,r,n){void 0===n&&(n=0);var i=t.call(this,e,r,n,[{text:"Yes",value:1},{text:"No",value:0}])||this;return i.content=e,i.title=r,i.value=n,i.kind="binary",i}return i(e,t),e}(c);e.Binary=f;var p=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.kind="nary",e}return i(e,t),e}(c);e.Nary=p;var y=function(t){function e(e,r,n,i){void 0===i&&(i="");var o=t.call(this,e,r,n)||this;return o.action=i,o.kind="leaf",o.nextName="Restart",o}return i(e,t),e.prototype.buttons=function(){t.prototype.buttons.call(this),this.summaryButton=s.default.makeButton("Summary",this.fireSummary.bind(this),this.card.buttons),this.action&&(this.actionButton=s.default.makeButton("Go",this.fireAction.bind(this),this.card.buttons,"ACTION"),document.createElement("button"))},e.prototype.fireAction=function(){window.open(this.action,"_blank")},e.prototype.fireSummary=function(){this.tree.summary(this)},e.prototype.fireNext=function(){this.hide(),this.tree.root.show(),this.tree.history=[]},e}(c);e.Leaf=y;var m=function(t){function e(){var e=t.call(this,"","Summary")||this;return e.kind="summary",e.nextName="Restart",e.summaryElement=s.default.makeDiv("SUMMARY"),e.card.content.appendChild(e.summaryElement),e}return i(e,t),e.prototype.fireNext=function(){this.hide(),this.tree.root.show(),this.tree.history=[]},e.prototype.show=function(){t.prototype.show.call(this),this.compileSummary()},e.prototype.compileSummary=function(){var t=this,e=0,r=this.tree.history.length,n=this.parent,i=[];this.summaryElement.innerHTML="";do{var o=e?n.labels.get(this.tree.history[r-e]):"";i.unshift(this.makeSummaryLine(n.content,o)),n=n.parent,e++}while(n);i.forEach((function(e){return t.summaryElement.appendChild(e)}))},e.prototype.makeSummaryLine=function(t,e){var r=s.default.makeDiv("SUMMARYLINE");return s.default.makeSpan(r,t,"QUESTION"),s.default.makeSpan(r,e,"ANSWER"),r},e}(c);e.Summary=m;var v=function(){function t(){this.div=s.default.makeDiv("NODE"),this.title=s.default.makeH1("TITLE"),this.content=s.default.makeDiv("CONTENT"),this.buttons=s.default.makeDiv("BUTTONS"),this.div.appendChild(this.title),this.title.setAttribute("tabindex","-1"),this.div.appendChild(this.content),this.div.appendChild(this.buttons)}return t.prototype.show=function(){this.div.style.display="block",this.title.setAttribute("aria-live","polite"),this.title.focus()},t.prototype.hide=function(){this.div.style.display="none",this.title.removeAttribute("aria-live")},t}();e.Card=v},"./ts/util.ts":
/*!********************!*\
  !*** ./ts/util.ts ***!
  \********************/
/*! no static exports found */function(t,e,r){"use strict";var n,i=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,i,o=r.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(t){i={error:t}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(i(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.makeButton=function(e,r,n,i){void 0===i&&(i="");var o=document.createElement("button");return o.innerHTML=e,t.addClass(o,i||e.toUpperCase(),"BUTTON"),o.addEventListener("click",r),n.appendChild(o),o};t.addClass=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];e.forEach((function(e){return t.classList.add("DT_"+e.toUpperCase())}))},t.makeDiv=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var n=document.createElement("div");return t.addClass.apply(void 0,o([n],e)),n},t.makeH1=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var n=document.createElement("h1");return t.addClass.apply(void 0,o([n],e)),n},t.makeSpan=function(e,r){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];var a=document.createElement("span");t.addClass.apply(void 0,o([a],n)),a.innerHTML=r,e.appendChild(a)}}(n||(n={})),e.default=n}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,